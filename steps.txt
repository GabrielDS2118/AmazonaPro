1.Configuracion desde cero:
    Instalar: Google, Node, Git
    Ver versiones de node,git y npm 
    VsCode:

        Prettier:Codigo estetico
            settings > default formatter > Prettier - code formatter
                       formatOnSave > check
                       Prettier:SingleQoute > check

        Corchetes JSON:
           ctr + shift + p
           json > Preferences: Open Settings
           Add setting: Corchetes coloreados
                "editor.bracketPairColorization.enabled": true

        EsLint: Mostrar errores

        JavaScript (ES6) code snippets
        ES7 React/Redux/GraphQL/React-Native snippets

    Iniciando:
        npx create-react-app frontend
        cd frontend
        npm start
        Abrir en el navegador
        Ir a src/App.js y hacer un template básico del header y la lista de productos,agregar estilos en index.css
    
    Git:
        Eliminar el repositorio dentro de frontend: rm -rf .git
        Mover el archivo .gitignore de frontend a la carpeta principal(EcommerceMern)
        En .gitignore quitar el / en node_modules y build

        Inicializar un nuevo repositorio en ecommercemern: git init

2.Lista de Productos: 
    - En la carpeta padre hacer un README.md

    - src/data.js
        Clonar repositorio del profesor https://github.com/basir/mern-amazona.git
        2.1 Crear array de productos en src/data.js
        2.2 Añadir images de los productos:
            Carpeta de imagenes public/images (copiarlas del repositorio del profesor)
        2.3 Renderizar productos:
            En src/App.js importar los productos de src/data.js:
            Mostrar imagen,nombre,precio y boton para añadir al carrito
            
        2.4 Estilos en index.js

3.Routing

    3.1 npm i react-router-dom en frontend
    3.2 src/App.js
        Envolver todo en un BrowserRouter,rutas:
        
            '/' -> screens/HomeScreen (renderizar todos los productos):
                Cuando se le de click a la img de cada producto (Link to) se enviará a '/product/:slug'

            '/product/:slug' -> screens/ProductScreen (detalle del producto)

4. Create Node Server

    EcommerceMern/backend:

        1. Correr npm init in backend folder 
        2. Update package.json set type: module
        3. npm install express
        4. Archivo server.js -> crear server:
            En la ruta get '/api/products' la response serán los productos (para esto necestimoas mover el archivo 
            frontend/src/data.js a la carpeta backend)
        
        5.Probar ruta get '/api/products':
            node server.js
            Abrir en el navegador la ruta http://localhost:5000/api/products y ver si se muestran los productos
            Instalar JSONViewer para que los JSON se vean bien
        
        6.Instalar nodemon para no tener que escribir node server.js cada vez que se hacen cambios
            npm install nodemon --save-dev
            Comando start en package.json: 
                "start": "nodemon server.js"
            npm start

5. Fetch Products From Backend:

    - frontend/
        1.Añadir proxy en package.json
        2.npm install axios
        3.Consultar a la API en src/screens/HomeScreen.js:
            useState -> inicialmente la lista de productos será una lista vacia
            Despues de consultar a la API mediante el useEffect la lista de productos sera la response

6.Manejar estado con useReducer
    Usar useReducer en HomeScrren.js para manejaar el estado de una manera más compleja

7.Agregar Boostrap

    frontend/
    npm install react-bootsrap bootstrap --force
    npm install -S react-router-bootstrap --force

    Modificar frontend/src/: 
            App.js -> Modificar navBar y hacer footer
            index.css, 
            index.js


